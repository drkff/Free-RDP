# üîê Windows RDP via GitHub Actions + Ngrok

Ce projet permet de cr√©er une session **Bureau √† distance (RDP)** de 6 heures sur un environnement **Windows Server GitHub Actions**, accessible depuis **n‚Äôimporte o√π via Ngrok**, sans adresse IP publique.

## üöÄ Fonctionnalit√©s

- Cr√©ation automatique d‚Äôun tunnel RDP avec **Ngrok**
- Acc√®s s√©curis√© √† distance via **GitHub Actions**
- Environnement **Windows Server 2022**
- Session de **6 heures maximum** (limite GitHub Actions)

## ‚öôÔ∏è Pr√©requis

1. Un compte **Ngrok** : [https://ngrok.com/](https://ngrok.com/)
2. R√©cup√©rez votre **auth token** Ngrok.
3. Cr√©ez un secret dans votre d√©p√¥t GitHub :

   - Nom du secret : `NGROK_AUTH_TOKEN`
   - Valeur : votre token Ngrok

## üìÇ Structure du workflow

Voici le fichier `.github/workflows/rdp.yml` utilis√© :

```yaml
name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract
      run: Expand-Archive ngrok.zip

    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0

    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Create Tunnel
      run: .\ngrok\ngrok.exe tcp 3389
